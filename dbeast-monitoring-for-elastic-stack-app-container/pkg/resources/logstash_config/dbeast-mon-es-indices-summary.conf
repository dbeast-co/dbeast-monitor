input{
  http_poller {
    id => "Input-get-stats-from-ES" 
    urls => {
      lab => "<PROD_HOST>/_stats?filter_path=_all"
    }
	user => "<PROD_USER>"
	password => "<PROD_PASSWORD>"
	
    request_timeout => 60
    schedule => { "cron" => "* * * * *"}
    codec => "json"
    ssl_verification_mode => "none"
    add_field => {
	  "[elasticsearch][cluster][id]" => "<CLUSTER_ID>"
	  "[event][module]" => "elasticsearch"
	  "[event][dataset]" => "indices_stats"
	}	
  }
}
filter{
  mutate {
    id => "MUTATE-Rename-fields-to-ecs"
    rename => {
	  "_all" => "[elasticsearch][index][summary]"
	}
  }
  
  aggregate {
     id => "AGGREGATE-Calculate-rates"
     task_id => "%{[elasticsearch][cluster][id]}"
     code => "
	    require 'date';
		#Date in seconds
		sample_date = Time.now.to_i;
		event.set('sample_date', sample_date);

		#Calculate rates 
		if 	map.key?('last_sample_date')
		  date_diff = ( sample_date - map['last_sample_date'] )

		  event.set('[elasticsearch][index][summary][total][docs][ingest_rate]', map.key?('last_docs_count') ? ((event.get('[elasticsearch][index][summary][total][docs][count]').to_i - map['last_docs_count']) / date_diff).ceil : 0);
		  event.set('[elasticsearch][index][summary][total][indexing][index_rate]', map.key?('last_indexing_index_total') ? ((event.get('[elasticsearch][index][summary][total][indexing][index_total]').to_i - map['last_indexing_index_total']) / date_diff).ceil : 0);
		  event.set('[elasticsearch][index][summary][total][search][query_rate]', map.key?('last_search_query_total') ? ((event.get('[elasticsearch][index][summary][total][search][query_total]').to_i - map['last_search_query_total']) / date_diff).ceil : 0);
 
          event.set('[elasticsearch][index][summary][primaries][docs][ingest_rate]', map.key?('last_pri_docs_count') ? ((event.get('[elasticsearch][index][summary][primaries][docs][count]').to_i - map['last_pri_docs_count']) / date_diff).ceil : 0);
 		  event.set('[elasticsearch][index][summary][primaries][indexing][index_rate]', map.key?('last_pri_indexing_index_total') ? ((event.get('[elasticsearch][index][summary][primaries][indexing][index_total]').to_i - map['last_pri_indexing_index_total']) / date_diff).ceil : 0);
		  event.set('[elasticsearch][index][summary][primaries][search][query_rate]', map.key?('last_pri_search_query_total') ? ((event.get('[elasticsearch][index][summary][primaries][search][query_total]').to_i - map['last_pri_search_query_total']) / date_diff).ceil : 0);

		  map['first_doc'] = false;
		else
		  map['first_doc'] = true;
		end
		
		map['last_sample_date'] =  sample_date;

		#Define the values for the next document
        map['last_docs_count'] =  event.get('[elasticsearch][index][summary][total][docs][count]').to_i;
        map['last_indexing_index_total'] =  event.get('[elasticsearch][index][summary][total][indexing][index_total]').to_i;
		map['last_search_query_total'] =  event.get('[elasticsearch][index][summary][total][search][query_total]').to_i;
		
        map['last_pri_docs_count'] =  event.get('[elasticsearch][index][summary][primaries][docs][count]').to_i;
        map['last_pri_indexing_index_total'] =  event.get('[elasticsearch][index][summary][primaries][indexing][index_total]').to_i;
		map['last_pri_search_query_total'] =  event.get('[elasticsearch][index][summary][primaries][search][query_total]').to_i;

	   #Drop document if there is no preview documents.
		if map['first_doc']
		  event.cancel();
		end
     "
     timeout => 3000000
     push_map_as_event_on_timeout => false
  }
  mutate {
    id => "MUTATE-Remove-fields"
    rename => {
	  "_all" => "[elasticsearch][index][summary]"
	}
	remove_field => ["@version","[event][original]"]
  }
}
output{
  if [elasticsearch][cluster][id] {
    elasticsearch {
      id => "es-output-send-to-index-stats-historical-index"
  	  hosts => ["<MON_HOST>"]
  	  user => "<MON_USER>"
  	  password => "<MON_PASSWORD>"

      ssl_enabled => <MON_SSL_ENABLED>
  	  ssl_verification_mode => none
      index => "dbeast-mon-tsds-es-index-stats"
  	  action => "create"
  	  manage_template => false
    }
    elasticsearch {
      id => "es-output-send-to-index-stats-status-index"
  	  hosts => ["<MON_HOST>"]
  	  user => "<MON_USER>"
  	  password => "<MON_PASSWORD>"

      ssl_enabled => <MON_SSL_ENABLED>
  	  ssl_verification_mode => none
      index => "dbeast-mon-index-es-index-stats-status"
  	  document_id => "%{[elasticsearch][cluster][id]}"
  	  manage_template => false
    }
  }
  else {
    elasticsearch {
      id => "es-output-send-to-corrupted-data"
  	  hosts => ["<MON_HOST>"]
  	  user => "<MON_USER>"
  	  password => "<MON_PASSWORD>"

  	  ssl_enabled => <MON_SSL_ENABLED>
  	  ssl_verification_mode => none
      index => "dbeast-mon-index-corrupted-data"
  	  manage_template => false
    }
  }
}
